C51 COMPILER V9.60.0.0   INIT                                                              03/18/2021 22:25:42 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INIT
OBJECT MODULE PLACED IN .\Objects\init.obj
COMPILER INVOKED BY: D:\51\C51\BIN\C51.EXE init.c COMPACT OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\i
                    -nit.lst) OBJECT(.\Objects\init.obj)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU Limited ---------------------------------------------*/
   4          /* --- STC12C5Axx Series MCU UART (8-bit/9-bit)Demo ----------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966----------------------*/
   8          /* --- Web: www.STCMCU.com -----------------------------------------*/
   9          /* --- Web: www.GXWMCU.com -----------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          #include "uart_init.h"
  14          #include <ADLX345.h>
  15          #include <GPS.h>
  16          sbit bit9 = P2^2;           //P2.2 show UART data bit9
  17          bit busy;
  18          void uart2_init()
  19          {
  20   1        #if (PARITYBIT == NONE_PARITY)
                  S2CON = 0x50;           //8-bit variable UART
              #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
  23   1          S2CON = 0xda;           //9-bit variable UART, parity bit initial to 1
  24   1      #elif (PARITYBIT == SPACE_PARITY)
                  S2CON = 0xd2;           //9-bit variable UART, parity bit initial to 0
              #endif
  27   1      
  28   1          BRT = -(FOSC/32/BAUD);  //Set auto-reload vaule of baudrate generator
  29   1          AUXR = 0x14;            //Baudrate generator work in 1T mode
  30   1          IE2 = 0x01;             //Enable UART2 interrupt
  31   1          EA = 1;                 //Open master interrupt switch
  32   1      
  33   1      
  34   1      }
  35          void uart1_init()
  36          {
  37   1      
  38   1          SCON = 0x50;            //8-bit variable UART
  39   1      
  40   1          PCON=0X00;
  41   1          TMOD = 0x20;            //Set Timer1 as 8-bit auto reload mode
  42   1          TH1 = TL1 = -(FOSC/12/32/BAUD1); //Set auto-reload vaule
  43   1          TR1 = 1;                //Timer1 start run
  44   1          ES = 1;                 //Enable UART interrupt
  45   1          EA = 1;                 //Open master interrupt switch
  46   1      
  47   1      }       
  48          
  49          
  50          
  51          /*----------------------------
  52          Send a byte data to UART
  53          Input: dat (data to be sent)
  54          Output:None
C51 COMPILER V9.60.0.0   INIT                                                              03/18/2021 22:25:42 PAGE 2   

  55          ----------------------------*/
  56          void SendData1(uchar dat)
  57          {
  58   1          while (busy);           //Wait for the completion of the previous data is sent
  59   1          ACC = dat;              //Calculate the even parity bit P (PSW.0)
  60   1          if (P)                  //Set the parity bit according to P
  61   1          {
  62   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 0;            //Set parity bit to 0
              #elif (PARITYBIT == EVEN_PARITY)
  65   2              TB8 = 1;            //Set parity bit to 1
  66   2      #endif
  67   2          }
  68   1          else
  69   1          {
  70   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 1;            //Set parity bit to 1
              #elif (PARITYBIT == EVEN_PARITY)
  73   2              TB8 = 0;            //Set parity bit to 0
  74   2      #endif
  75   2          }
  76   1          busy = 1;
  77   1          SBUF = ACC;             //Send data to UART buffer
  78   1      }
  79          
  80          
  81          
  82          /*----------------------------
  83          Send a string to UART
  84          Input: s (address of string)
  85          Output:None
  86          ----------------------------*/
  87          void SendString1(char *s)
  88          {
  89   1          while (*s)              //Check the end of the string
  90   1          {
  91   2              SendData1(*s++);     //Send current char and increment string ptr
  92   2          }
  93   1      }
  94          
  95          /*----------------------------
  96          Send a byte data to UART
  97          Input: dat (data to be sent)
  98          Output:None
  99          ----------------------------*/
 100          void SendData2(uchar dat)
 101          {
 102   1          while (busy);           //Wait for the completion of the previous data is sent
 103   1          ACC = dat;              //Calculate the even parity bit P (PSW.0)
 104   1          if (P)                  //Set the parity bit according to P
 105   1          {
 106   2      #if (PARITYBIT == ODD_PARITY)
                      S2CON &= ~S2TB8;    //Set parity bit to 0
              #elif (PARITYBIT == EVEN_PARITY)
 109   2              S2CON |= S2TB8;     //Set parity bit to 1
 110   2      #endif
 111   2          }
 112   1          else
 113   1          {
 114   2      #if (PARITYBIT == ODD_PARITY)
                      S2CON |= S2TB8;     //Set parity bit to 1
              #elif (PARITYBIT == EVEN_PARITY)
C51 COMPILER V9.60.0.0   INIT                                                              03/18/2021 22:25:42 PAGE 3   

 117   2              S2CON &= ~S2TB8;    //Set parity bit to 0
 118   2      #endif
 119   2          }
 120   1          busy = 1;
 121   1          S2BUF = ACC;            //Send data to UART2 buffer
 122   1      }
 123          
 124          /*----------------------------
 125          Send a string to UART
 126          Input: s (address of string)
 127          Output:None
 128          ----------------------------*/
 129          void SendString2(char *s)
 130          {
 131   1          while (*s)              //Check the end of the string
 132   1          {
 133   2              SendData2(*s++);     //Send current char and increment string ptr
 134   2          }
 135   1      }
 136          
 137          
 138          
 139          
 140          /*----------------------------
 141          UART interrupt service routine
 142          ----------------------------*/
 143          void Uart_Isr() interrupt 4 using 3
 144          { 
 145   1              unsigned char temp = 0;
 146   1              if(RI)
 147   1              {       
 148   2              ES=0;
 149   2              temp = SBUF;
 150   2      
 151   2              RI = 0;
 152   2              
 153   2              if(temp == '$')
 154   2              { P2=0X00;
 155   3                      RX_Count = 0;
 156   3                      Flag_GPS_OK = 0;                
 157   3              }
 158   2      
 159   2              RX_Buffer[RX_Count++] = temp;
 160   2              
 161   2              if(RX_Count >= 70)
 162   2              {
 163   3                              
 164   3                      RX_Count = 70;
 165   3              }
 166   2      
 167   2              if(temp == '*')
 168   2              {
 169   3                      Flag_GPS_OK = 1;                
 170   3              }
 171   2      
 172   2              ES=1; 
 173   2        P2=0XFF;
 174   2        }
 175   1              if(TI)
 176   1              {
 177   2                TI=0;
 178   2                      busy=0;
C51 COMPILER V9.60.0.0   INIT                                                              03/18/2021 22:25:42 PAGE 4   

 179   2              
 180   2              }
 181   1                         
 182   1                       
 183   1      }
 184          
 185          /*----------------------------
 186          UART2 interrupt service routine
 187          ----------------------------*/
 188          void Uart2() interrupt 8 using 1
 189          {
 190   1          if (S2CON & S2RI)
 191   1          {
 192   2              S2CON &= ~S2RI;     //Clear receive interrupt flag
 193   2              P0 = S2BUF;         //P0 show UART data
 194   2              P2 = (S2CON & S2RB8);//P2.2 show parity bit
 195   2          }
 196   1          if (S2CON & S2TI)
 197   1          {
 198   2              S2CON &= ~S2TI;     //Clear transmit interrupt flag
 199   2              busy = 0;           //Clear transmit busy flag
 200   2          }
 201   1      }
 202          
 203          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    292    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----       6
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

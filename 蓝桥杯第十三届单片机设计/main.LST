C51 COMPILER V9.00   MAIN                                                                  04/09/2022 13:38:24 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\k4\C51\BIN\C51.EXE main.c BROWSE INCDIR(.\lib) DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include "keyscan.h"
   3          //#include "key.h"
   4          //#include "usart.h"
   5          //#include "iic.h"
   6          #include "DS1302.h"
   7          #include "onewire.h"
   8          sfr AUXR=0x8e;
   9          sbit LED1 = P0^0;
  10          sbit LED2 = P0^1;
  11          sbit LED3 = P0^2;
  12          
  13          sbit R1 = P3^0;  
  14          sbit R2 = P3^1;
  15          sbit R3 = P3^2;
  16          sbit R4 = P3^3;
  17          
  18          
  19          sbit C3 = P3^5;
  20          sbit C4 = P3^4;
  21          
  22          unsigned char  smgduan[16]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,
  23                                          0xF8,0x80,0x90,0x88,0x83,0xC6,0xA1,
  24                                          0x86,0x8E}; // 0-9 
  25          
  26          unsigned char  smgduan2[10]={0x40,0x79,0x24,0x30,0x4d,0x12,0x02,0x78,0x00,0x10}; // 带小数点的0-9 
  27          unsigned char  smgduan3[5]={0x8E,0xC8,0xC1,0xBF,0xF9}; // F P U U - 1
  28          
  29          // 秒 分   时  日 月  周   年 
  30          // 00 30   20  12  3  五   21
  31          //BCD 码
  32          unsigned char TIME[7] = {0x00, 0x25, 0x23, 0x09, 0x04, 0x06, 0x22};
  33          
  34          unsigned char code READ_RTC_ADDR[7] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d};
  35          unsigned char code WRITE_RTC_ADDR[7] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};
  36          
  37          unsigned char ui = 0;
  38          unsigned char ui_s13 = 0;
  39          
  40          unsigned char tamp_dat = 0;
  41          unsigned int temp_sys = 23;
  42          unsigned int temp = 0;
  43          unsigned char time_tongzhi = 0;
  44          unsigned char JiDian_i = 0;
  45          
  46          
  47          extern unsigned char keyNum;  //矩阵键盘
  48          void Init_Timer();
  49          void switchsmg(unsigned char position,unsigned char dat);
  50          
  51          
  52          void DS1302_ReadTime();
  53          void DS1302_Config();
  54          
  55          void JidianQi(unsigned char i);         //0 关闭机电其
C51 COMPILER V9.00   MAIN                                                                  04/09/2022 13:38:24 PAGE 2   

  56          void ReadTemperature();
  57          void BiJiao_times();
  58          
  59          void init_system();
  60          void Init_Timer0(); //定时器
  61          void DisplaySMG_DS1302_UI2();
  62          void DisplaySMG_DS18B20_UI1();  //温度
  63          void DisplaySMG_syst_UI3();  //参数设置
  64          void DisplaySMG_DS1302_UI2_2();
  65          void HC138(unsigned char n);
  66          void shua_xin();
  67                  
  68          void delay(unsigned int ms)
  69          {
  70   1               unsigned int i;
  71   1               while(ms--)
  72   1                      {
  73   2                              for(i=120;i>0;i--);
  74   2                      }
  75   1      }
  76          
  77          
  78          /*===============定时器0==================*/
  79          /*                定时0.1秒 5秒           */
  80          void Init_Timer0()
  81          {
  82   1              TMOD = 0x01;                    
  83   1              TH0 = (65536 - 50000) / 256;      
  84   1              TL0 = (65536 - 50000) % 256;
  85   1              ET0 = 1;                       
  86   1              EA = 1;                               
  87   1              TR0 = 1;                       
  88   1      }
  89          /*============定时器0===============*/
  90          unsigned char count = 0;
  91          unsigned char count_led3 = 0;
  92          void SeviceTimer0() interrupt 1
  93          {
  94   1              TH0 = (65536 - 50000) / 256;
  95   1              TL0 = (65536 - 50000) % 256;
  96   1                      
  97   1                      count_led3++;
  98   1              HC138(4);
  99   1                      P0=0xff;
 100   1                      if(ui_s13==0)            //温度工作模式  LED 亮
 101   1                      {
 102   2                         LED2=0;
 103   2                      }
 104   1                  else
 105   1                      {
 106   2                              LED2=1;
 107   2                      }
 108   1      
 109   1                      
 110   1                      if(JiDian_i==1)
 111   1                      {
 112   2                              if(count_led3 == 2)                    //0.1 时间
 113   2                      {
 114   3                              LED3 = ~LED3;
 115   3                                              count_led3=0;
 116   3                      }
 117   2                      }
C51 COMPILER V9.00   MAIN                                                                  04/09/2022 13:38:24 PAGE 3   

 118   1                      else
 119   1                      {
 120   2                              LED3=1;
 121   2                      }
 122   1      
 123   1      
 124   1      
 125   1                      if(time_tongzhi==1)       //整点
 126   1                  {
 127   2                    count++;
 128   2                        LED1 =0;
 129   2                        JidianQi(1);  //继电器 亮
 130   2                  }
 131   1                      else
 132   1                      {
 133   2                       LED1 =1;
 134   2                      }
 135   1                      
 136   1              if(count == 100)       //  5秒时间到        LED1 灭   
 137   1              {
 138   2                      LED1 =1;
 139   2                                      JidianQi(0);  //继电器 灭
 140   2                      count = 0;
 141   2                                      time_tongzhi=0;
 142   2              }
 143   1      }
 144          
 145          /*************************************************************************/
 146          /* 单片机上电后 将DS1302时间 设置为 2022 年 周六 4月 9日 23点 25 分 00秒 */
 147          /*                      DS1302_Config();      //时间初始化  23 时 25分   */
 148          /*************************************************************************/
 149          void main()
 150          {   
 151   1              init_system();  //系统初始化
 152   1              Init_Timer0();  //定时器初始化
 153   1              HC138(4);
 154   1          P0=0xff;        
 155   1      
 156   1              DS1302_Config();  //时间初始化  23 时 25分
 157   1              Read_DS18B20();   //温度初始化
 158   1              ScanKeys();
 159   1              delay(100);
 160   1              
 161   1              while(1)
 162   1                      {
 163   2                       shua_xin();   //
 164   2                       ScanKeys();
 165   2                       switch(keyNum)
 166   2                       {
 167   3                               case 17:{
 168   4                                        if(ui_s13==1)
 169   4                                                {
 170   5                                                              R3 = 0;
 171   5                                                      R2 = R1 = R4 = 1;
 172   5                                                      C3 = C4 = 1;
 173   5                                                      if(C4 == 0)                       // s17
 174   5                                                      {
 175   6                                                                     while(C4 == 0)
 176   6                                                                         {
 177   7                                                                               DisplaySMG_DS1302_UI2_2();                                                     
 178   7                                                                         }
 179   6                                  }
C51 COMPILER V9.00   MAIN                                                                  04/09/2022 13:38:24 PAGE 4   

 180   5                                                }
 181   4                                                else
 182   4                                                {
 183   5                                                 temp_sys--;
 184   5                                                }                               
 185   4                                       };break;
 186   3      
 187   3                               case 16:{                                       
 188   4                                                temp_sys++; 
 189   4                                               };break;
 190   3                                                                        
 191   3                               case 13:{                                       
 192   4                                                ui_s13++;
 193   4                                                if(ui_s13==2)
 194   4                                                {
 195   5                                                      ui_s13=0;
 196   5                                                }                                           
 197   4                                               };break;
 198   3                               case 12:{                                       
 199   4                                                ui++;
 200   4                                                if(ui==3)
 201   4                                                {
 202   5                                                      ui=0;
 203   5                                                }                                           
 204   4                                               };break;
 205   3                               default: break;
 206   3                       }
 207   2                       
 208   2                      }
 209   1      }
 210          
 211          
 212          //138高级写法                                                                                                                           
 213          void HC138(unsigned char n)
 214          {
 215   1              switch(n)
 216   1              {                                                                                                                               
 217   2                       case 4:P2=(P2&0X1F)|0X80;break;//LED 
 218   2                       case 5:P2=(P2&0X1F)|0XA0;break;//蜂鸣器，继电器
 219   2                       case 6:P2=(P2&0X1F)|0XC0;break;//选位
 220   2                   case 7:P2=(P2&0X1F)|0XE0;break;//选段
 221   2               default: break;        
 222   2                      }
 223   1      }
 224                                  
 225          
 226          void switchsmg(unsigned char position,unsigned char dat)
 227          {
 228   1              
 229   1          HC138(6);
 230   1              P0=0x01<<position ;  //  <<左移  数码右移位
 231   1              HC138(7);
 232   1              P0=dat;
 233   1      }
 234          
 235          
 236          
 237          
 238          void DisplaySMG_DS18B20_UI1()  //温度
 239          {
 240   1          //ReadTemperature();
 241   1              switchsmg(0, smgduan3[2]);  //     U
C51 COMPILER V9.00   MAIN                                                                  04/09/2022 13:38:24 PAGE 5   

 242   1              delay(10);
 243   1              switchsmg(1, smgduan[1]);  //      1
 244   1              delay(10);
 245   1              
 246   1              switchsmg(5, smgduan[(temp/100)%10]);  //
 247   1              delay(10);
 248   1          switchsmg(6, smgduan2[(temp/10)%10]);  //
 249   1              delay(10);
 250   1          switchsmg(7, smgduan[temp%10]);  // 
 251   1              delay(10);
 252   1          
 253   1      }
 254          
 255          void DisplaySMG_DS1302_UI2()  //时间
 256          {   
 257   1          DS1302_ReadTime();
 258   1              switchsmg(0, smgduan3[2]);  // U
 259   1              delay(10);
 260   1              switchsmg(1, smgduan[2]);  // 2 
 261   1              delay(10);
 262   1                                       
 263   1              switchsmg(3, smgduan[TIME[2]/16]);  //
 264   1              delay(10);
 265   1          switchsmg(4, smgduan[TIME[2]&0x0f]);  
 266   1              delay(10);
 267   1      
 268   1          switchsmg(5, smgduan3[3]);  //         -
 269   1              delay(10);
 270   1              switchsmg(6, smgduan[TIME[1]/16]);  //  
 271   1              delay(10);
 272   1          switchsmg(7, smgduan[TIME[1]&0x0f]);  //    
 273   1              delay(10);
 274   1           
 275   1      
 276   1      }
 277          
 278          void DisplaySMG_DS1302_UI2_2()  //时间 2
 279          {   
 280   1          DS1302_ReadTime();
 281   1              switchsmg(0, smgduan3[2]);  // U
 282   1              delay(10);
 283   1              switchsmg(1, smgduan[2]);  // 2 
 284   1              delay(10);
 285   1                                       
 286   1              switchsmg(3, smgduan[TIME[1]/16]);  //
 287   1              delay(10);
 288   1          switchsmg(4, smgduan[TIME[1]&0x0f]);  
 289   1              delay(10);
 290   1      
 291   1          switchsmg(5, smgduan3[3]);  //         -
 292   1              delay(10);
 293   1              switchsmg(6, smgduan[TIME[0]/16]);  //  
 294   1              delay(10);
 295   1          switchsmg(7, smgduan[TIME[0]&0x0f]);  //    
 296   1              delay(10);
 297   1           
 298   1      
 299   1      }
 300          
 301          void DisplaySMG_syst_UI3()  //参数设置
 302          {
 303   1          
C51 COMPILER V9.00   MAIN                                                                  04/09/2022 13:38:24 PAGE 6   

 304   1              switchsmg(0, smgduan3[2]);  //     U
 305   1              delay(10);
 306   1              switchsmg(1, smgduan[3]);  //      3
 307   1              delay(10);
 308   1              
 309   1              switchsmg(6, smgduan[temp_sys/10]);  //
 310   1              delay(10);
 311   1          switchsmg(7, smgduan[temp_sys%10]);  //
 312   1              delay(10);
 313   1              
 314   1          
 315   1      }
 316          
 317          void shua_xin()
 318          {
 319   1         ReadTemperature();
 320   1         DS1302_ReadTime();
 321   1         if(ui_s13==0)                 //温度工作模式
 322   1         {    
 323   2                      if(((temp/100)%10)*10+(temp/10)%10>temp_sys)     
 324   2                      {
 325   3                         JidianQi(1);   //
 326   3                         JiDian_i=1;    // 继电器亮
 327   3                      }
 328   2                      else
 329   2                      {
 330   3                         JidianQi(0);
 331   3                         JiDian_i=0;          // 继电器灭
 332   3                      }
 333   2         }
 334   1         else
 335   1         {    
 336   2              JidianQi(0);    // 继电器灭
 337   2                  BiJiao_times();
 338   2         }
 339   1      
 340   1      
 341   1         if(ui==0)
 342   1         {
 343   2           DisplaySMG_DS18B20_UI1(); //页面一
 344   2         }
 345   1         else if(ui==1)
 346   1         {
 347   2            DisplaySMG_DS1302_UI2();
 348   2         }
 349   1         else if(ui==2)
 350   1         {
 351   2            DisplaySMG_syst_UI3();
 352   2         }
 353   1      }
 354          
 355          
 356          void JidianQi(unsigned char i)          //0 打开机电其
 357          {
 358   1               HC138(5); //
 359   1               if(i==1)
 360   1               {
 361   2                      P0=0x10;
 362   2               }
 363   1               else
 364   1               {
 365   2                P0=0x00;
C51 COMPILER V9.00   MAIN                                                                  04/09/2022 13:38:24 PAGE 7   

 366   2               }
 367   1      
 368   1      }
 369          
 370          void ReadTemperature()
 371          {
 372   1              unsigned char LSB,MSB ;
 373   1              
 374   1              Init_DS18B20(); 
 375   1              Write_DS18B20(0xCC); 
 376   1              Write_DS18B20(0x44); 
 377   1              Init_DS18B20(); 
 378   1              Write_DS18B20(0xCC); 
 379   1              Write_DS18B20(0xBE); 
 380   1              LSB = Read_DS18B20(); 
 381   1              MSB = Read_DS18B20(); 
 382   1              
 383   1              temp = 0x0000;
 384   1              temp = MSB;
 385   1              temp <<= 8;
 386   1              temp = temp | LSB;
 387   1              temp >>= 4;
 388   1              temp = temp*10;
 389   1              temp = temp + (LSB&0x0f)*0.625;
 390   1              
 391   1              if((MSB>>4) == 0x0f)
 392   1              {
 393   2                 temp |= 0x8000;
 394   2              }
 395   1      
 396   1      }
 397          // 秒 分   时  日 月  周   年 
 398          // 00 30   20  12  3  五   21
 399          //BCD 码
 400          //unsigned char TIME[7] = {0x00, 0x30, 0x09, 0x09, 0x04, 0x06, 0x22};
 401          //switchsmg(3, smgduan[TIME[1]/16]);  //
 402          //delay(10);
 403          //switchsmg(4, smgduan[TIME[1]&0x0f]);
 404          void BiJiao_times()
 405          {
 406   1          DS1302_ReadTime();
 407   1              if(TIME[1]/16==0 && TIME[1]&0x0f==0 && TIME[0]/16==0 && TIME[0]&0x0f==0)  //分 秒
 408   1              {
 409   2                 time_tongzhi=1;
 410   2              }
 411   1      
 412   1      }
 413          
 414          
 415          void init_system()
 416          {
 417   1              P2=0xa0;//1010 0000蜂鸣器继电器选通
 418   1              P0=0X00;//关闭蜂鸣器、继电器
 419   1              P2=0X00;//取消选通
 420   1      }
 421          
 422          void DS1302_Config()  //
 423          {
 424   1              unsigned char n;
 425   1              Ds1302_Single_Byte_Write(0x8E,0x00);
 426   1              for (n=0; n<7; n++)
 427   1              {
C51 COMPILER V9.00   MAIN                                                                  04/09/2022 13:38:24 PAGE 8   

 428   2                      Ds1302_Single_Byte_Write(WRITE_RTC_ADDR[n],TIME[n]);        
 429   2              }
 430   1              Ds1302_Single_Byte_Write(0x8E,0x80);
 431   1      }
 432          
 433          void DS1302_ReadTime()
 434          {
 435   1              unsigned char n;
 436   1              for (n=0; n<7; n++)
 437   1              {
 438   2                                      
 439   2                                      
 440   2                                        TIME[n] = Ds1302_Single_Byte_Read(READ_RTC_ADDR[n]);                          
 441   2                      
 442   2              } 
 443   1      
 444   1                      while(TIME[1]/16==15)
 445   1                      {
 446   2                                       TIME[1] = Ds1302_Single_Byte_Read(READ_RTC_ADDR[1]);
 447   2                      }
 448   1                       while(TIME[2]/16==15)
 449   1                      {
 450   2                                       TIME[2] = Ds1302_Single_Byte_Read(READ_RTC_ADDR[2]);
 451   2                      }        
 452   1      }
 453          
 454          
 455          
 456          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1130    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     49       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
